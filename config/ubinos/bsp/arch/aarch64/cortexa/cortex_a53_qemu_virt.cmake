#
# Copyright (c) 2025 Sung Ho Park and CSOS
#
# SPDX-License-Identifier: Apache-2.0
#

set_cache(UBINOS__BSP__CPU_TYPE "CORTEX_A53" STRING)
set_cache(UBINOS__BSP__CPU_ARMTHUMBSTATE "ARM" STRING)
set_cache(UBINOS__BSP__CPU_MODEL "CORTEX_A53_QEMU" STRING)

set_cache(UBINOS__BSP__BOARD_MODEL "CORTEX_A53_QEMU_VIRT" STRING)

set_cache(UBINOS__BSP__LINK_MEMMAP_TYPE "SRAM" STRING)

set_cache(UBINOS__BSP__LINK_MEMMAP_FLASH_ORIGIN 0x08000000 STRING)
set_cache(UBINOS__BSP__LINK_MEMMAP_FLASH_LENGTH 0x00100000 STRING)
set_cache(UBINOS__BSP__LINK_MEMMAP_RAM_ORIGIN   0x40100000 STRING)
set_cache(UBINOS__BSP__LINK_MEMMAP_RAM_LENGTH   0x00020000 STRING)

set_cache(UBINOS__BSP__USE_ICACHE TRUE BOOL)
set_cache(UBINOS__BSP__USE_DCACHE TRUE BOOL)

set_cache(UBINOS__BSP__CLOCK_FREQ_MAIN 168000 STRING)
set_cache(UBINOS__BSP__CLOCK_FREQ_SLOW 32 STRING)
set_cache(UBINOS__BSP__BUSYWAITCOUNT_PER_MS 59893 STRING)

set_cache(UBINOS__BSP__STACK_SIZE 0x800 STRING)

set_cache(UBINOS__BSP__LINKSCRIPT_FILE "" PATH)

if(UBINOS__BSP__USE_QEMU)

    set_cache(UBINOS__BSP__GDBSCRIPT_FILE_LOAD "${PROJECT_UBINOS_DIR}/resource/ubinos/bsp/arch/arm/gdb_dummy.gdb" PATH)
    set_cache(UBINOS__BSP__GDBSCRIPT_FILE_RESET "${PROJECT_UBINOS_DIR}/resource/ubinos/bsp/arch/arm/gdb_dummy.gdb" PATH)

    set_cache(UBINOS__BSP__DEBUG_SERVER_TYPE "QEMU" STRING)
    set_cache(UBINOS__BSP__DEBUG_SERVER_COMMAND "qemu-system-aarch64 -S -machine virt -cpu cortex-a53 -m 1024 -nographic -serial mon:stdio" STRING)

else()

    message(FATAL_ERROR "Unsupported UBINOS__BSP__USE_QEMU configuration. Please set UBINOS__BSP__USE_QEMU to TRUE.")

endif(UBINOS__BSP__USE_QEMU)

# maximum size = 192 KiB
set_cache(UBINOS__UBICLIB__HEAP_DIR0_ALGORITHM "GROUP" STRING)
set_cache(UBINOS__UBICLIB__HEAP_DIR0_LOCKTYPE "MUTEX" STRING)
set_cache(UBINOS__UBICLIB__HEAP_DIR0_M 8 STRING)
set_cache(UBINOS__UBICLIB__HEAP_DIR0_FBLCOUNT 210 STRING)
set_cache(UBINOS__UBICLIB__HEAP_DIR0_FBLBM_BUFSIZE 32 STRING)

include(${CMAKE_CURRENT_LIST_DIR}/../../aarch64.cmake)

